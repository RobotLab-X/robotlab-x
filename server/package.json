{
  "name": "robotlab-x-0.0.0",
  "version": "0.0.0",
  "description": "Modern robotics framework with a focus on visualization",
  "license": "MPL-2.0",
  "main": "./dist/electron/Main.js",
  "homepage": "https://robotlab-x.com",
  "author": {
    "name": "GroG",
    "email": "grog@robotlab-x.com"
  },
  "build": {
    "appId": "com.robotlab-x-0.0.0",
    "productName": "RobotLab-X-0.0.0",
    "files": [
      "dist/**/*",
      "!src/express/public/repo/**/*cache/**/*",
      "!**/*.map",
      "package.json"
    ],
    "directories": {
      "buildResources": "build"
    },
    "mac": {
      "target": [
        "dmg"
      ],
      "category": "public.app-category.developer-tools"
    },
    "win": {
      "target": [
        "portable"
      ]
    },
    "linux": {
      "icon": "dist/client/logo.png",
      "target": [
        "AppImage"
      ],
      "category": "Development"
    }
  },
  "scripts": {
    "build": "babel src --extensions '.ts,.js' --out-dir dist",
    "copy-public": "shx cp -rf src/express/public dist/express",
    "electron-dev": "nodemon --exec \"yarn run build && cross-env electron --inspect ./dist/electron/Main.js\"",
    "test": "jest",
    "test-coverage": "nyc jest",
    "generate-schemas": "typescript-json-schema tsconfig.json 'Ollama' --out schemas.json",
    "generate-swagger": "node generate-swagger-paths.js",
    "generate-pkg-file": "node generatePkgFile.js",
    "package-win": "yarn run build && electron-builder --windows",
    "package-mac": "yarn run build && electron-builder --mac",
    "package-linux": "yarn run build && electron-builder --linux"
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ],
  "devDependencies": {
    "@babel/cli": "^7.25.6",
    "@babel/core": "^7.25.2",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-private-methods": "^7.18.6",
    "@babel/plugin-transform-typescript": "^7.25.2",
    "@babel/preset-env": "^7.25.4",
    "@babel/preset-typescript": "^7.24.7",
    "@microsoft/tsdoc": "^0.15.0",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.12",
    "@types/minimist": "^1.2.5",
    "@types/semver": "^7.5.8",
    "@types/uuid": "^9.0.8",
    "@types/ws": "^8.5.10",
    "@types/yaml": "^1.9.7",
    "cross-env": "^7.0.3",
    "electron": "^31.2.1",
    "electron-builder": "^25.1.8",
    "jest": "^29.7.0",
    "nodemon": "^3.1.0",
    "openapi-types": "^12.1.3",
    "shx": "^0.3.4",
    "swagger-jsdoc": "^6.2.8",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5",
    "typescript-json-schema": "^0.63.0",
    "yarn": "^1.22.22"
  },
  "dependencies": {
    "@aws-sdk/client-polly": "^3.620.0",
    "@types/johnny-five": "^2.1.9",
    "@types/node": "^20.11.30",
    "@types/serialport": "^8.0.5",
    "@types/winston": "^2.4.4",
    "asar": "^3.2.0",
    "axios": "1.7.7",
    "cheerio": "^1.0.0-rc.12",
    "cors": "^2.8.5",
    "dockerode": "^4.0.2",
    "express": "^4.19.2",
    "express-session": "^1.18.0",
    "firmata": "^2.3.0",
    "flatten": "^1.0.3",
    "fs-extra": "^11.2.0",
    "gtts": "^0.2.1",
    "johnny-five": "^2.1.0",
    "mic": "^2.1.2",
    "minimist": "^1.2.8",
    "ollama": "^0.5.1",
    "play-sound": "^1.1.6",
    "python-shell": "^5.0.0",
    "semver": "^7.6.2",
    "serialport": "^12.0.0",
    "session-file-store": "^1.5.0",
    "source-map-support": "^0.5.21",
    "uuid": "^9.0.1",
    "wav": "^1.0.2",
    "winston": "^3.13.0",
    "ws": "^8.17.0",
    "xstate": "^5.16.0",
    "yaml": "^2.4.1"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!<rootDir>/node_modules/",
      "!<rootDir>/src/index.tsx",
      "!<rootDir>/src/serviceWorker.ts",
      "!<rootDir>/src/App.tsx",
      "!<rootDir>/src/Routes.tsx",
      "!src/**/types.ts",
      "!src/**/*.d.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 75,
        "functions": 75,
        "lines": 75,
        "statements": 75
      }
    },
    "moduleNameMapper": {
      "^@electron/(.*)$": "<rootDir>/dist/electron/$1",
      "^@express/(.*)$": "<rootDir>/dist/express/$1"
    }
  }
}
