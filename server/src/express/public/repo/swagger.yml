openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
components:
  schemas:
    $schema: http://json-schema.org/draft-07/schema#
    definitions:
      NodeJS.Timeout:
        description: >-
          This object is created internally and is returned from `setTimeout()`
          and `setInterval()`. It can be passed to either `clearTimeout()` or
          `clearInterval()` in order to cancel the

          scheduled actions.


          By default, when a timer is scheduled using either `setTimeout()` or
          `setInterval()`, the Node.js event loop will continue running as long
          as the

          timer is active. Each of the `Timeout` objects returned by these
          functions

          export both `timeout.ref()` and `timeout.unref()` functions that can
          be used to

          control this default behavior.
        type: object
      NotifyList:
        additionalProperties:
          items:
            $ref: '#/definitions/SubscriptionListener'
          type: array
        type: object
      SubscriptionListener:
        properties:
          callbackMethod:
            default: null
            type: string
          callbackName:
            default: null
            type: string
          topicMethod:
            default: null
            type: string
        type: object
      default_1:
        properties:
          args:
            default: null
            items:
              type: string
            type: array
          author:
            default: null
            type: string
          categories:
            default: null
            items:
              type: string
            type: array
          cmd:
            default: null
            type: string
          cwd:
            default: null
            type: string
          dependencies:
            default: null
            items:
              type: string
            type: array
          description:
            default: null
            type: string
          interfaces:
            default: null
            items: {}
            type: array
          license:
            default: null
            type: string
          platform:
            default: null
            description: >-
              The immediate platform the service is running on, e.g. node vs
              browser both

              are javascript but have different runtime environments.
            type: string
          platformVersion:
            default: null
            type: string
          requirements:
            default: null
            type: string
          title:
            default: null
            type: string
          typeKey:
            default: null
            type: string
          version:
            default: null
            type: string
        type: object
    description: >-
      A service that provides clock functionality, periodically publishing the
      current epoch time.
    properties:
      config:
        properties:
          intervalMs:
            default: 1000
            type: number
          start:
            default: false
            type: boolean
        type: object
      dataPath:
        default: null
        type: string
      fullname:
        default: null
        type: string
      hostname:
        description: '- The hostname of the service.'
        type: string
      id:
        description: '- The unique identifier for the service.'
        type: string
      intervalId:
        $ref: '#/definitions/NodeJS.Timeout'
        default: null
      name:
        description: '- The name of the service.'
        type: string
      notifyList:
        $ref: '#/definitions/NotifyList'
      pkg:
        $ref: '#/definitions/default_1'
        default: null
      ready:
        default: false
        type: boolean
      startTime:
        default: null
        type: number
      typeKey:
        description: '- The type key of the service.'
        type: string
      version:
        description: '- The version of the service.'
        type: string
    type: object
paths:
  /clock/publishEpoch:
    put:
      summary: Executes publishEpoch method
      responses:
        '200':
          description: publishEpoch method executed successfully
  /clock/onTick:
    put:
      summary: Executes onTick method
      responses:
        '200':
          description: onTick method executed successfully
  /clock/startClock:
    put:
      summary: Executes startClock method
      responses:
        '200':
          description: startClock method executed successfully
  /clock/stopClock:
    put:
      summary: Executes stopClock method
      responses:
        '200':
          description: stopClock method executed successfully
  /clock/toJSON:
    put:
      summary: Executes toJSON method
      responses:
        '200':
          description: toJSON method executed successfully
tags: []
