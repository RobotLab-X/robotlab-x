openapi: 3.0.3
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:3001/v1
    description: Local development server
components:
  schemas:
    $schema: http://json-schema.org/draft-07/schema#
    definitions:
      A<object>:
        description: An AsyncIterator which can be aborted
        properties:
          abortController: {}
          doneCallback: {}
          itr: {}
        type: object
      a:
        properties:
          fetch:
            type: object
          host:
            type: string
          proxy:
            type: boolean
        type: object
    properties:
      config:
        $ref: "#/definitions/a"
      fetch:
        type: object
      ongoingStreamedRequests:
        items:
          $ref: "#/definitions/A<object>"
        type: array
    type: object
paths:
  /checkPipVersion:
    put:
      summary: |-
        Check the pip version - part of necessary preparations
        to install a python client
      description: |-
        Check the pip version - part of necessary preparations
        to install a python client
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - requiredVersion
      responses:
        "200":
          description: checkPipVersion executed successfully
    get:
      summary: Fetch information for checkPipVersion
      description: HTTP GET for checkPipVersion
      parameters:
        - name: requiredVersion
          in: query
          required: true
          schema:
            type: string
          description: Parameter requiredVersion
      responses:
        "200":
          description: Details for checkPipVersion fetched successfully
  /checkPythonVersion:
    put:
      summary: Executes checkPythonVersion method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - requiredVersion
      responses:
        "200":
          description: checkPythonVersion executed successfully
    get:
      summary: Fetch information for checkPythonVersion
      description: HTTP GET for checkPythonVersion
      parameters:
        - name: requiredVersion
          in: query
          required: true
          schema:
            type: string
          description: Parameter requiredVersion
      responses:
        "200":
          description: Details for checkPythonVersion fetched successfully
  /installPipRequirements:
    put:
      summary: Executes installPipRequirements method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: "{}"
            example:
              - packages
      responses:
        "200":
          description: installPipRequirements executed successfully
    get:
      summary: Fetch information for installPipRequirements
      description: HTTP GET for installPipRequirements
      parameters:
        - name: packages
          in: query
          required: true
          schema:
            type: "{}"
          description: Parameter packages
      responses:
        "200":
          description: Details for installPipRequirements fetched successfully
  /installRepoRequirement:
    put:
      summary: Executes installRepoRequirement method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - typeKey
      responses:
        "200":
          description: installRepoRequirement executed successfully
    get:
      summary: Fetch information for installRepoRequirement
      description: HTTP GET for installRepoRequirement
      parameters:
        - name: typeKey
          in: query
          required: true
          schema:
            type: string
          description: Parameter typeKey
      responses:
        "200":
          description: Details for installRepoRequirement fetched successfully
  /installRepoRequirements:
    put:
      summary: Executes installRepoRequirements method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
                - type: string
            example:
              - envName
              - envPath
      responses:
        "200":
          description: installRepoRequirements executed successfully
    get:
      summary: Fetch information for installRepoRequirements
      description: HTTP GET for installRepoRequirements
      parameters:
        - name: envName
          in: query
          required: true
          schema:
            type: string
          description: Parameter envName
        - name: envPath
          in: query
          required: true
          schema:
            type: string
          description: Parameter envPath
      responses:
        "200":
          description: Details for installRepoRequirements fetched successfully
  /installVirtualEnv:
    put:
      summary: Executes installVirtualEnv method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: installVirtualEnv executed successfully
    get:
      summary: Fetch information for installVirtualEnv
      description: HTTP GET for installVirtualEnv
      parameters: []
      responses:
        "200":
          description: Details for installVirtualEnv fetched successfully
  /invoke:
    put:
      summary: >-
        Invoke on a Proxy has a very different meaning than invoke on a "local"
        Service.

        This Proxy is local and can assist in routing messages to a remote
        service or installing

        a client service on the same host.  However, since its process id is
        different, it cannot

        use Service.invoke.
      description: >-
        Invoke on a Proxy has a very different meaning than invoke on a "local"
        Service.

        This Proxy is local and can assist in routing messages to a remote
        service or installing

        a client service on the same host.  However, since its process id is
        different, it cannot

        use Service.invoke.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
                - type: any[]
            example:
              - methodName
              - args
      responses:
        "200":
          description: invoke executed successfully
    get:
      summary: Fetch information for invoke
      description: HTTP GET for invoke
      parameters:
        - name: methodName
          in: query
          required: true
          schema:
            type: string
          description: Parameter methodName
        - name: args
          in: query
          required: true
          schema:
            type: any[]
          description: Parameter args
      responses:
        "200":
          description: Details for invoke fetched successfully
  /invokeMsg:
    put:
      summary: >-
        Invoke a message on the remote service

        Overloaded from Service, because for a proxy it means something
        different
      description: >-
        Invoke a message on the remote service

        Overloaded from Service, because for a proxy it means something
        different
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: Message
            example:
              - msg
      responses:
        "200":
          description: invokeMsg executed successfully
    get:
      summary: Fetch information for invokeMsg
      description: HTTP GET for invokeMsg
      parameters:
        - name: msg
          in: query
          required: true
          schema:
            type: Message
          description: Parameter msg
      responses:
        "200":
          description: Details for invokeMsg fetched successfully
  /normalizeVersion:
    put:
      summary: Executes normalizeVersion method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - version
      responses:
        "200":
          description: normalizeVersion executed successfully
    get:
      summary: Fetch information for normalizeVersion
      description: HTTP GET for normalizeVersion
      parameters:
        - name: version
          in: query
          required: true
          schema:
            type: string
          description: Parameter version
      responses:
        "200":
          description: Details for normalizeVersion fetched successfully
  /onConnectionClosed:
    put:
      summary: Executes onConnectionClosed method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: onConnectionClosed executed successfully
    get:
      summary: Fetch information for onConnectionClosed
      description: HTTP GET for onConnectionClosed
      parameters: []
      responses:
        "200":
          description: Details for onConnectionClosed fetched successfully
  /sendRemote:
    put:
      summary: Requesting to send a message to a remote process
      description: Requesting to send a message to a remote process
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: Message
            example:
              - msg
      responses:
        "200":
          description: sendRemote executed successfully
    get:
      summary: Fetch information for sendRemote
      description: HTTP GET for sendRemote
      parameters:
        - name: msg
          in: query
          required: true
          schema:
            type: Message
          description: Parameter msg
      responses:
        "200":
          description: Details for sendRemote fetched successfully
  /startProxy:
    put:
      summary: Executes startProxy method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: "{}"
            example:
              - packages
      responses:
        "200":
          description: startProxy executed successfully
    get:
      summary: Fetch information for startProxy
      description: HTTP GET for startProxy
      parameters:
        - name: packages
          in: query
          required: true
          schema:
            type: "{}"
          description: Parameter packages
      responses:
        "200":
          description: Details for startProxy fetched successfully
  /startService:
    put:
      summary: Executes startService method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: startService executed successfully
    get:
      summary: Fetch information for startService
      description: HTTP GET for startService
      parameters: []
      responses:
        "200":
          description: Details for startService fetched successfully
  /toJSON:
    put:
      summary: Executes toJSON method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: toJSON executed successfully
    get:
      summary: Fetch information for toJSON
      description: HTTP GET for toJSON
      parameters: []
      responses:
        "200":
          description: Details for toJSON fetched successfully
tags: []
