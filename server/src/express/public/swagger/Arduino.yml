openapi: 3.0.3
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:3001/v1
    description: Local development server
components:
  schemas:
    $schema: http://json-schema.org/draft-07/schema#
    definitions:
      A<object>:
        description: An AsyncIterator which can be aborted
        properties:
          abortController: {}
          doneCallback: {}
          itr: {}
        type: object
      a:
        properties:
          fetch:
            type: object
          host:
            type: string
          proxy:
            type: boolean
        type: object
    properties:
      config:
        $ref: "#/definitions/a"
      fetch:
        type: object
      ongoingStreamedRequests:
        items:
          $ref: "#/definitions/A<object>"
        type: array
    type: object
paths:
  /applyConfig:
    put:
      summary: Executes applyConfig method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - config
      responses:
        "200":
          description: applyConfig executed successfully
    get:
      summary: Fetch information for applyConfig
      description: HTTP GET for applyConfig
      parameters:
        - name: config
          in: query
          required: true
          schema:
            type: any
          description: Parameter config
      responses:
        "200":
          description: Details for applyConfig fetched successfully
  /connect:
    put:
      summary: Executes connect method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - port
      responses:
        "200":
          description: connect executed successfully
    get:
      summary: Fetch information for connect
      description: HTTP GET for connect
      parameters:
        - name: port
          in: query
          required: true
          schema:
            type: string
          description: Parameter port
      responses:
        "200":
          description: Details for connect fetched successfully
  /createPins:
    put:
      summary: Executes createPins method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: createPins executed successfully
    get:
      summary: Fetch information for createPins
      description: HTTP GET for createPins
      parameters: []
      responses:
        "200":
          description: Details for createPins fetched successfully
  /disconnect:
    put:
      summary: Executes disconnect method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: disconnect executed successfully
    get:
      summary: Fetch information for disconnect
      description: HTTP GET for disconnect
      parameters: []
      responses:
        "200":
          description: Details for disconnect fetched successfully
  /getBoardInfo:
    put:
      summary: Executes getBoardInfo method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: getBoardInfo executed successfully
    get:
      summary: Fetch information for getBoardInfo
      description: HTTP GET for getBoardInfo
      parameters: []
      responses:
        "200":
          description: Details for getBoardInfo fetched successfully
  /getPins:
    put:
      summary: Executes getPins method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: getPins executed successfully
    get:
      summary: Fetch information for getPins
      description: HTTP GET for getPins
      parameters: []
      responses:
        "200":
          description: Details for getPins fetched successfully
  /getPorts:
    put:
      summary: Executes getPorts method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: getPorts executed successfully
    get:
      summary: Fetch information for getPorts
      description: HTTP GET for getPorts
      parameters: []
      responses:
        "200":
          description: Details for getPorts fetched successfully
  /onServoMoveTo:
    put:
      summary: Executes onServoMoveTo method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: ServoMove
            example:
              - servoMove
      responses:
        "200":
          description: onServoMoveTo executed successfully
    get:
      summary: Fetch information for onServoMoveTo
      description: HTTP GET for onServoMoveTo
      parameters:
        - name: servoMove
          in: query
          required: true
          schema:
            type: ServoMove
          description: Parameter servoMove
      responses:
        "200":
          description: Details for onServoMoveTo fetched successfully
  /servoWrite:
    put:
      summary: Executes servoWrite method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
                - type: integer
                - type: integer
            example:
              - pin
              - angle
              - speed
      responses:
        "200":
          description: servoWrite executed successfully
    get:
      summary: Fetch information for servoWrite
      description: HTTP GET for servoWrite
      parameters:
        - name: pin
          in: query
          required: true
          schema:
            type: string
          description: Parameter pin
        - name: angle
          in: query
          required: true
          schema:
            type: integer
          description: Parameter angle
        - name: speed
          in: query
          required: true
          schema:
            type: integer
          description: Parameter speed
      responses:
        "200":
          description: Details for servoWrite fetched successfully
  /startService:
    put:
      summary: Executes startService method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: startService executed successfully
    get:
      summary: Fetch information for startService
      description: HTTP GET for startService
      parameters: []
      responses:
        "200":
          description: Details for startService fetched successfully
  /stopService:
    put:
      summary: Executes stopService method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: stopService executed successfully
    get:
      summary: Fetch information for stopService
      description: HTTP GET for stopService
      parameters: []
      responses:
        "200":
          description: Details for stopService fetched successfully
  /toJSON:
    put:
      summary: Executes toJSON method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: toJSON executed successfully
    get:
      summary: Fetch information for toJSON
      description: HTTP GET for toJSON
      parameters: []
      responses:
        "200":
          description: Details for toJSON fetched successfully
  /write:
    put:
      summary: Executes write method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: integer
                - type: integer
            example:
              - pin
              - value
      responses:
        "200":
          description: write executed successfully
    get:
      summary: Fetch information for write
      description: HTTP GET for write
      parameters:
        - name: pin
          in: query
          required: true
          schema:
            type: integer
          description: Parameter pin
        - name: value
          in: query
          required: true
          schema:
            type: integer
          description: Parameter value
      responses:
        "200":
          description: Details for write fetched successfully
tags: []
