openapi: 3.0.3
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:3001/v1
    description: Local development server
components:
  schemas:
    $schema: http://json-schema.org/draft-07/schema#
    definitions:
      A<object>:
        description: An AsyncIterator which can be aborted
        properties:
          abortController: {}
          doneCallback: {}
          itr: {}
        type: object
      a:
        properties:
          fetch:
            type: object
          host:
            type: string
          proxy:
            type: boolean
        type: object
    properties:
      config:
        $ref: "#/definitions/a"
      fetch:
        type: object
      ongoingStreamedRequests:
        items:
          $ref: "#/definitions/A<object>"
        type: array
    type: object
paths:
  /getMicrophones:
    put:
      summary: Executes getMicrophones method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: getMicrophones executed successfully
    get:
      summary: Fetch information for getMicrophones
      description: HTTP GET for getMicrophones
      parameters: []
      responses:
        "200":
          description: Details for getMicrophones fetched successfully
  /parseMicrophoneList:
    put:
      summary: Executes parseMicrophoneList method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
                - type: string
            example:
              - output
              - platform
      responses:
        "200":
          description: parseMicrophoneList executed successfully
    get:
      summary: Fetch information for parseMicrophoneList
      description: HTTP GET for parseMicrophoneList
      parameters:
        - name: output
          in: query
          required: true
          schema:
            type: string
          description: Parameter output
        - name: platform
          in: query
          required: true
          schema:
            type: string
          description: Parameter platform
      responses:
        "200":
          description: Details for parseMicrophoneList fetched successfully
  /pauseRecording:
    put:
      summary: Executes pauseRecording method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: pauseRecording executed successfully
    get:
      summary: Fetch information for pauseRecording
      description: HTTP GET for pauseRecording
      parameters: []
      responses:
        "200":
          description: Details for pauseRecording fetched successfully
  /resumeRecording:
    put:
      summary: Executes resumeRecording method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: resumeRecording executed successfully
    get:
      summary: Fetch information for resumeRecording
      description: HTTP GET for resumeRecording
      parameters: []
      responses:
        "200":
          description: Details for resumeRecording fetched successfully
  /setMicrophone:
    put:
      summary: Executes setMicrophone method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - mic
      responses:
        "200":
          description: setMicrophone executed successfully
    get:
      summary: Fetch information for setMicrophone
      description: HTTP GET for setMicrophone
      parameters:
        - name: mic
          in: query
          required: true
          schema:
            type: string
          description: Parameter mic
      responses:
        "200":
          description: Details for setMicrophone fetched successfully
  /startRecording:
    put:
      summary: Executes startRecording method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: startRecording executed successfully
    get:
      summary: Fetch information for startRecording
      description: HTTP GET for startRecording
      parameters: []
      responses:
        "200":
          description: Details for startRecording fetched successfully
  /startService:
    put:
      summary: Executes startService method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: startService executed successfully
    get:
      summary: Fetch information for startService
      description: HTTP GET for startService
      parameters: []
      responses:
        "200":
          description: Details for startService fetched successfully
  /stopRecording:
    put:
      summary: Executes stopRecording method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: stopRecording executed successfully
    get:
      summary: Fetch information for stopRecording
      description: HTTP GET for stopRecording
      parameters: []
      responses:
        "200":
          description: Details for stopRecording fetched successfully
  /toJSON:
    put:
      summary: Executes toJSON method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: toJSON executed successfully
    get:
      summary: Fetch information for toJSON
      description: HTTP GET for toJSON
      parameters: []
      responses:
        "200":
          description: Details for toJSON fetched successfully
tags: []
