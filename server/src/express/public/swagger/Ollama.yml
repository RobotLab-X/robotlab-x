openapi: 3.0.3
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:3001/v1
    description: Local development server
components:
  schemas:
    $schema: http://json-schema.org/draft-07/schema#
    definitions:
      A<object>:
        description: An AsyncIterator which can be aborted
        properties:
          abortController: {}
          doneCallback: {}
          itr: {}
        type: object
      a:
        properties:
          fetch:
            type: object
          host:
            type: string
          proxy:
            type: boolean
        type: object
    properties:
      config:
        $ref: "#/definitions/a"
      fetch:
        type: object
      ongoingStreamedRequests:
        items:
          $ref: "#/definitions/A<object>"
        type: array
    type: object
paths:
  /addInput:
    put:
      summary: Executes addInput method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
                - type: string
                - type: any
            example:
              - prompt
              - key
              - value
      responses:
        "200":
          description: addInput executed successfully
    get:
      summary: Fetch information for addInput
      description: HTTP GET for addInput
      parameters:
        - name: prompt
          in: query
          required: true
          schema:
            type: string
          description: Parameter prompt
        - name: key
          in: query
          required: true
          schema:
            type: string
          description: Parameter key
        - name: value
          in: query
          required: true
          schema:
            type: any
          description: Parameter value
      responses:
        "200":
          description: Details for addInput fetched successfully
  /applyConfig:
    put:
      summary: Applies the provided configuration to the Ollama service.
      description: Applies the provided configuration to the Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - config
      responses:
        "200":
          description: applyConfig executed successfully
    get:
      summary: Fetch information for applyConfig
      description: HTTP GET for applyConfig
      parameters:
        - name: config
          in: query
          required: true
          schema:
            type: any
          description: "- The configuration object to apply."
      responses:
        "200":
          description: Details for applyConfig fetched successfully
  /chat:
    put:
      summary: |-
        FIXME ! do not make the function async !!!!
        Sends a chat message to the Ollama service and processes the response.
      description: |-
        FIXME ! do not make the function async !!!!
        Sends a chat message to the Ollama service and processes the response.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - text
      responses:
        "200":
          description: chat executed successfully
    get:
      summary: Fetch information for chat
      description: HTTP GET for chat
      parameters:
        - name: text
          in: query
          required: true
          schema:
            type: string
          description: "- The chat message text."
      responses:
        "200":
          description: Details for chat fetched successfully
  /check:
    put:
      summary: Checks the status of the Ollama service.
      description: Checks the status of the Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: check executed successfully
    get:
      summary: Fetch information for check
      description: HTTP GET for check
      parameters: []
      responses:
        "200":
          description: Details for check fetched successfully
  /generate:
    put:
      summary: Executes generate method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string[]
                - type: string
                - type: string
                - type: boolean
            example:
              - imagesBase64
              - prompt
              - model
              - stream
      responses:
        "200":
          description: generate executed successfully
    get:
      summary: Fetch information for generate
      description: HTTP GET for generate
      parameters:
        - name: imagesBase64
          in: query
          required: true
          schema:
            type: string[]
          description: Parameter imagesBase64
        - name: prompt
          in: query
          required: true
          schema:
            type: string
          description: Parameter prompt
        - name: model
          in: query
          required: true
          schema:
            type: string
          description: Parameter model
        - name: stream
          in: query
          required: true
          schema:
            type: boolean
          description: Parameter stream
      responses:
        "200":
          description: Details for generate fetched successfully
  /getResponse:
    put:
      summary: Retrieves the response from the Ollama service.
      description: Retrieves the response from the Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - request
      responses:
        "200":
          description: getResponse executed successfully
    get:
      summary: Fetch information for getResponse
      description: HTTP GET for getResponse
      parameters:
        - name: request
          in: query
          required: true
          schema:
            type: any
          description: "- The request object to send."
      responses:
        "200":
          description: Details for getResponse fetched successfully
  /listModels:
    put:
      summary: Executes listModels method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: listModels executed successfully
    get:
      summary: Fetch information for listModels
      description: HTTP GET for listModels
      parameters: []
      responses:
        "200":
          description: Details for listModels fetched successfully
  /loadPrompts:
    put:
      summary: Executes loadPrompts method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: loadPrompts executed successfully
    get:
      summary: Fetch information for loadPrompts
      description: HTTP GET for loadPrompts
      parameters: []
      responses:
        "200":
          description: Details for loadPrompts fetched successfully
  /onBase64Image:
    put:
      summary: Executes onBase64Image method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - image
      responses:
        "200":
          description: onBase64Image executed successfully
    get:
      summary: Fetch information for onBase64Image
      description: HTTP GET for onBase64Image
      parameters:
        - name: image
          in: query
          required: true
          schema:
            type: any
          description: Parameter image
      responses:
        "200":
          description: Details for onBase64Image fetched successfully
  /onImage:
    put:
      summary: Executes onImage method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - image
      responses:
        "200":
          description: onImage executed successfully
    get:
      summary: Fetch information for onImage
      description: HTTP GET for onImage
      parameters:
        - name: image
          in: query
          required: true
          schema:
            type: any
          description: Parameter image
      responses:
        "200":
          description: Details for onImage fetched successfully
  /onText:
    put:
      summary: Executes onText method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - text
      responses:
        "200":
          description: onText executed successfully
    get:
      summary: Fetch information for onText
      description: HTTP GET for onText
      parameters:
        - name: text
          in: query
          required: true
          schema:
            type: string
          description: Parameter text
      responses:
        "200":
          description: Details for onText fetched successfully
  /processInputs:
    put:
      summary: Processes input values and replaces placeholders in the content string.
      description: Processes input values and replaces placeholders in the content string.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - template
      responses:
        "200":
          description: The processed content string.
    get:
      summary: Fetch information for processInputs
      description: HTTP GET for processInputs
      parameters:
        - name: template
          in: query
          required: true
          schema:
            type: string
          description: Parameter template
      responses:
        "200":
          description: The processed content string.
  /publishChat:
    put:
      summary: Publishes the chat response from Ollama service.
      description: Publishes the chat response from Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - text
      responses:
        "200":
          description: The chat response text.
    get:
      summary: Fetch information for publishChat
      description: HTTP GET for publishChat
      parameters:
        - name: text
          in: query
          required: true
          schema:
            type: string
          description: "- The chat response text."
      responses:
        "200":
          description: The chat response text.
  /publishNodeCall:
    put:
      summary: Publishes a callback from a Node.js response.
      description: Publishes a callback from a Node.js response.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - callback
      responses:
        "200":
          description: publishNodeCall executed successfully
    get:
      summary: Fetch information for publishNodeCall
      description: HTTP GET for publishNodeCall
      parameters:
        - name: callback
          in: query
          required: true
          schema:
            type: any
          description: "- The callback to publish."
      responses:
        "200":
          description: Details for publishNodeCall fetched successfully
  /publishPythonCall:
    put:
      summary: Publishes a callback from a Python response.
      description: Publishes a callback from a Python response.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - callback
      responses:
        "200":
          description: publishPythonCall executed successfully
    get:
      summary: Fetch information for publishPythonCall
      description: HTTP GET for publishPythonCall
      parameters:
        - name: callback
          in: query
          required: true
          schema:
            type: any
          description: "- The callback to publish."
      responses:
        "200":
          description: Details for publishPythonCall fetched successfully
  /publishRequest:
    put:
      summary: Publishes the request sent to Ollama service.
      description: Publishes the request sent to Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - request
      responses:
        "200":
          description: The request object.
    get:
      summary: Fetch information for publishRequest
      description: HTTP GET for publishRequest
      parameters:
        - name: request
          in: query
          required: true
          schema:
            type: any
          description: "- The request object to publish."
      responses:
        "200":
          description: The request object.
  /publishResponse:
    put:
      summary: Publishes the response from Ollama service.
      description: Publishes the response from Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - response
      responses:
        "200":
          description: The response object.
    get:
      summary: Fetch information for publishResponse
      description: HTTP GET for publishResponse
      parameters:
        - name: response
          in: query
          required: true
          schema:
            type: any
          description: "- The response object to publish."
      responses:
        "200":
          description: The response object.
  /publishText:
    put:
      summary: Simple text publishing
      description: Simple text publishing
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - text
      responses:
        "200":
          description: publishText executed successfully
    get:
      summary: Fetch information for publishText
      description: HTTP GET for publishText
      parameters:
        - name: text
          in: query
          required: true
          schema:
            type: string
          description: Parameter text
      responses:
        "200":
          description: Details for publishText fetched successfully
  /pullModel:
    put:
      summary: Executes pullModel method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
                - type: boolean
            example:
              - model
              - stream
      responses:
        "200":
          description: pullModel executed successfully
    get:
      summary: Fetch information for pullModel
      description: HTTP GET for pullModel
      parameters:
        - name: model
          in: query
          required: true
          schema:
            type: string
          description: Parameter model
        - name: stream
          in: query
          required: true
          schema:
            type: boolean
          description: Parameter stream
      responses:
        "200":
          description: Details for pullModel fetched successfully
  /scrapeLibrary:
    put:
      summary: Executes scrapeLibrary method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: scrapeLibrary executed successfully
    get:
      summary: Fetch information for scrapeLibrary
      description: HTTP GET for scrapeLibrary
      parameters: []
      responses:
        "200":
          description: Details for scrapeLibrary fetched successfully
  /setModel:
    put:
      summary: Sets the model to be used by the Ollama service.
      description: Sets the model to be used by the Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - model
      responses:
        "200":
          description: setModel executed successfully
    get:
      summary: Fetch information for setModel
      description: HTTP GET for setModel
      parameters:
        - name: model
          in: query
          required: true
          schema:
            type: string
          description: "- The model name to set."
      responses:
        "200":
          description: Details for setModel fetched successfully
  /setPrompt:
    put:
      summary: Sets a prompt for the Ollama service.
      description: Sets a prompt for the Ollama service.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
                - type: any
            example:
              - name
              - prompt
      responses:
        "200":
          description: setPrompt executed successfully
    get:
      summary: Fetch information for setPrompt
      description: HTTP GET for setPrompt
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
          description: "- The name of the prompt."
        - name: prompt
          in: query
          required: true
          schema:
            type: any
          description: "- The prompt object to set."
      responses:
        "200":
          description: Details for setPrompt fetched successfully
  /startCheckTimer:
    put:
      summary: |-
        Starts a timer to periodically check the Ollama service status.
        FIXME - get version
      description: |-
        Starts a timer to periodically check the Ollama service status.
        FIXME - get version
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: startCheckTimer executed successfully
    get:
      summary: Fetch information for startCheckTimer
      description: HTTP GET for startCheckTimer
      parameters: []
      responses:
        "200":
          description: Details for startCheckTimer fetched successfully
  /startService:
    put:
      summary: Executes startService method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: startService executed successfully
    get:
      summary: Fetch information for startService
      description: HTTP GET for startService
      parameters: []
      responses:
        "200":
          description: Details for startService fetched successfully
  /stopCheckTimer:
    put:
      summary: Stops the timer that checks the Ollama service status.
      description: Stops the timer that checks the Ollama service status.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: stopCheckTimer executed successfully
    get:
      summary: Fetch information for stopCheckTimer
      description: HTTP GET for stopCheckTimer
      parameters: []
      responses:
        "200":
          description: Details for stopCheckTimer fetched successfully
  /stopService:
    put:
      summary: Executes stopService method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: stopService executed successfully
    get:
      summary: Fetch information for stopService
      description: HTTP GET for stopService
      parameters: []
      responses:
        "200":
          description: Details for stopService fetched successfully
  /toJSON:
    put:
      summary: Executes toJSON method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: toJSON executed successfully
    get:
      summary: Fetch information for toJSON
      description: HTTP GET for toJSON
      parameters: []
      responses:
        "200":
          description: Details for toJSON fetched successfully
tags: []
