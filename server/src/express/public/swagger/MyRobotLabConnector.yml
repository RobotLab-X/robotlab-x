openapi: 3.0.3
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:3001/v1
    description: Local development server
components:
  schemas:
    $schema: http://json-schema.org/draft-07/schema#
    definitions:
      A<object>:
        description: An AsyncIterator which can be aborted
        properties:
          abortController: {}
          doneCallback: {}
          itr: {}
        type: object
      a:
        properties:
          fetch:
            type: object
          host:
            type: string
          proxy:
            type: boolean
        type: object
    properties:
      config:
        $ref: "#/definitions/a"
      fetch:
        type: object
      ongoingStreamedRequests:
        items:
          $ref: "#/definitions/A<object>"
        type: array
    type: object
paths:
  /connect:
    put:
      summary: Executes connect method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - wsUrl
      responses:
        "200":
          description: connect executed successfully
    get:
      summary: Fetch information for connect
      description: HTTP GET for connect
      parameters:
        - name: wsUrl
          in: query
          required: true
          schema:
            type: string
          description: Parameter wsUrl
      responses:
        "200":
          description: Details for connect fetched successfully
  /disconnect:
    put:
      summary: Executes disconnect method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: disconnect executed successfully
    get:
      summary: Fetch information for disconnect
      description: HTTP GET for disconnect
      parameters: []
      responses:
        "200":
          description: Details for disconnect fetched successfully
  /getConfigList:
    put:
      summary: Executes getConfigList method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: getConfigList executed successfully
    get:
      summary: Fetch information for getConfigList
      description: HTTP GET for getConfigList
      parameters: []
      responses:
        "200":
          description: Details for getConfigList fetched successfully
  /getConfigName:
    put:
      summary: Executes getConfigName method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: getConfigName executed successfully
    get:
      summary: Fetch information for getConfigName
      description: HTTP GET for getConfigName
      parameters: []
      responses:
        "200":
          description: Details for getConfigName fetched successfully
  /onMessageReceived:
    put:
      summary: >-
        me <--- mrl method to handle received messages from mrl instance

        Decode the message (twice) and address and route it to the correct
        service
      description: >-
        me <--- mrl method to handle received messages from mrl instance

        Decode the message (twice) and address and route it to the correct
        service
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - message
      responses:
        "200":
          description: onMessageReceived executed successfully
    get:
      summary: Fetch information for onMessageReceived
      description: HTTP GET for onMessageReceived
      parameters:
        - name: message
          in: query
          required: true
          schema:
            type: string
          description: Parameter message
      responses:
        "200":
          description: Details for onMessageReceived fetched successfully
  /onServiceNames:
    put:
      summary: Executes onServiceNames method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: Message
            example:
              - msg
      responses:
        "200":
          description: onServiceNames executed successfully
    get:
      summary: Fetch information for onServiceNames
      description: HTTP GET for onServiceNames
      parameters:
        - name: msg
          in: query
          required: true
          schema:
            type: Message
          description: Parameter msg
      responses:
        "200":
          description: Details for onServiceNames fetched successfully
  /publishMessage:
    put:
      summary: Executes publishMessage method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: any
            example:
              - mrlMessage
      responses:
        "200":
          description: publishMessage executed successfully
    get:
      summary: Fetch information for publishMessage
      description: HTTP GET for publishMessage
      parameters:
        - name: mrlMessage
          in: query
          required: true
          schema:
            type: any
          description: Parameter mrlMessage
      responses:
        "200":
          description: Details for publishMessage fetched successfully
  /sendMessage:
    put:
      summary: Executes sendMessage method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: object
            example:
              - message
      responses:
        "200":
          description: sendMessage executed successfully
    get:
      summary: Fetch information for sendMessage
      description: HTTP GET for sendMessage
      parameters:
        - name: message
          in: query
          required: true
          schema:
            type: object
          description: Parameter message
      responses:
        "200":
          description: Details for sendMessage fetched successfully
  /sendRemote:
    put:
      summary: |-
        rlx ---> mrl
        Encode the message and send it to the mrl remote process
      description: |-
        rlx ---> mrl
        Encode the message and send it to the mrl remote process
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: Message
            example:
              - msg
      responses:
        "200":
          description: sendRemote executed successfully
    get:
      summary: Fetch information for sendRemote
      description: HTTP GET for sendRemote
      parameters:
        - name: msg
          in: query
          required: true
          schema:
            type: Message
          description: rlx message
      responses:
        "200":
          description: Details for sendRemote fetched successfully
  /toJSON:
    put:
      summary: Executes toJSON method
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        "200":
          description: toJSON executed successfully
    get:
      summary: Fetch information for toJSON
      description: HTTP GET for toJSON
      parameters: []
      responses:
        "200":
          description: Details for toJSON fetched successfully
tags: []
