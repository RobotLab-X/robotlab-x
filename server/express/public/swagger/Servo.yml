openapi: 3.0.3
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:3001/v1
    description: Local development server
components:
  schemas:
    $schema: http://json-schema.org/draft-07/schema#
    definitions:
      Config:
        properties:
          fetch:
            type: object
          host:
            type: string
          proxy:
            type: boolean
        type: object
    properties:
      abortController: {}
      config:
        $ref: '#/definitions/Config'
      fetch:
        type: object
    type: object
paths:
  /moveTo:
    put:
      summary: Move the servo to a specific position at a specific speed
      description: Move the servo to a specific position at a specific speed
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: integer
                - type: integer
            example: []
      responses:
        '200':
          description: moveTo method executed successfully
  /attach:
    put:
      summary: Attach the servo to a specific controller
      description: Attach the servo to a specific controller
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - uno
      responses:
        '200':
          description: attach method executed successfully
  /publishServoMoveTo:
    put:
      summary: Publishing point for a Servo move - invoked internally
      description: Publishing point for a Servo move - invoked internally
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: integer
                - type: integer
            example: []
      responses:
        '200':
          description: publishServoMoveTo method executed successfully
  /getServoControllers:
    put:
      summary: Get the current set of possible controllers
      description: Get the current set of possible controllers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        '200':
          description: getServoControllers method executed successfully
  /removeController:
    put:
      summary: Remove the servo from a specific controller
      description: Remove the servo from a specific controller
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - uno
      responses:
        '200':
          description: removeController method executed successfully
  /setController:
    put:
      summary: Set the controller for the servo
      description: Set the controller for the servo
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example:
              - uno
      responses:
        '200':
          description: setController method executed successfully
  /setPin:
    put:
      summary: Set the current pin for the servo
      description: Set the current pin for the servo
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: string
            example: []
      responses:
        '200':
          description: setPin method executed successfully
  /setRest:
    put:
      summary: Set the current rest position for the servo
      description: Set the current rest position for the servo
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                - type: integer
            example: []
      responses:
        '200':
          description: setRest method executed successfully
  /rest:
    put:
      summary: A position set by the user to be the rest position of the servo
      description: A position set by the user to be the rest position of the servo
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: []
            example: []
      responses:
        '200':
          description: rest method executed successfully
tags: []
